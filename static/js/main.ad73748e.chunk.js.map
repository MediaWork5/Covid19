{"version":3,"sources":["Components/Chart/Chart.module.css","Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","images/covide19.png","App.js","index.js","Components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableurl","axios","get","countries","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","log","fetchCountries","name","Chart","useState","setDailyData","useEffect","fetchMyAPI","initialDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountry","fetchCountry","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","select","Coun","i","App","state","fetchedData","setState","this","image","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad73748e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1-u-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__21Dlc\",\"card\":\"Cards_card__10eDu\",\"infected\":\"Cards_infected__14VSX\",\"recovered\":\"Cards_recovered__1m1HN\",\"deaths\":\"Cards_deaths__31WEj\"};","import React from 'react';\r\n\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed || !recovered || !deaths || !lastUpdate) {\r\n        return \"Loading...\"\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justifyContent=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of active cases from COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={recovered.value} duration={2} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of recoveries from COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={deaths.value} duration={2} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of deaths caused by COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changableurl = url;\r\n\r\n    if(country) {\r\n        changableurl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        // const { data } = await axios.get(url);\r\n        // const modifiedData = {\r\n        //     confirmed: data.confirmed,\r\n        //     recovered: data.recovered,\r\n        //     deaths: data.deaths,\r\n        //     countries: data.countries,\r\n        //     lastUpdate: data.lastUpdate,\r\n        // }\r\n        // return modifiedData;\r\n\r\n        const { data: { confirmed, recovered, deaths, countries, lastUpdate} } = await axios.get(changableurl);\r\n        // const modifiedData = { confirmed, recovered, deaths, countries, lastUpdate };\r\n        // return modifiedData;\r\n\r\n        return { confirmed, recovered, deaths, countries, lastUpdate };\r\n\r\n    } catch (error) {\r\n        console.error(\"error fetching data\", error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({ \r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n         }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(\"error getting daily data\", error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(\"error getting countries\", error);\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                            fill: true,\r\n                        },\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed ? (\r\n            <Bar\r\n                data = {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'people',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current State in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            { country? barChart: lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api/index'\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [country, setCountry] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCountry = async () => {\r\n            setCountry(await fetchCountries());\r\n        }\r\n\r\n        fetchCountry();\r\n    },[setCountry]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)} className={styles.select}>\r\n                    <option value=\"global\">Global</option>\r\n                    {country.map((Coun, i) => <option key={i} value={Coun}>{Coun}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covide19.9e5d4fc7.png\";","import React, { Component} from 'react';\n\nimport { Cards, Chart, CountryPicker } from './Components';\nimport { fetchData } from './api/index';\nimport image from './images/covide19.png';\nimport styles from './App.module.css'\n\nclass App extends Component {\n\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        if(country === 'global') {\n            country = '';\n        }\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData, country: country });\n    }\n\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\n                <Cards data={ data } />\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__1nJTJ\",\"formControl\":\"CountryPicker_formControl___3zOH\",\"select\":\"CountryPicker_select__hEFMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_puu\",\"image\":\"App_image__773El\"};"],"sourceRoot":""}